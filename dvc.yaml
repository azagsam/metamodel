stages:
  # in the both stages, external dataset dependencies are removed because dvc doesn't work well with a lot of small files
  prepare-data-d2v:  # this is a lemmatized dataset for training doc2vec model
    cmd: python src/get_data.py --model d2v
    deps:
      - data/surs.jsonl
    outs:
      - data/doc2vec-training.jsonl

  prepare-data-metamodel:  # this stage produces a dataset for summarization models
    cmd: python src/get_data.py --model metamodel
    deps:
      - data/surs.jsonl
    outs:
      - data/metamodel-training.jsonl

  train-d2v:  # trains doc2vec model
    cmd: python src/train_doc2vec.py data/doc2vec-training.jsonl model/doc2vec-large
    deps:
      - data/doc2vec-training.jsonl
      - src/train_doc2vec.py  # todo in the previous two stages, the scripts should be also present in the "deps"
    params:
      - train-d2v.max_vocab_size
      - train-d2v.vector_size
      - train-d2v.window
      - train-d2v.min_count
      - train-d2v.workers
      - train-d2v.epochs
    metrics:
      - d2v-metrics.json:
          cache: false
    outs:
      - model/doc2vec-large

  prepare-embeddings:
    cmd: python src/prepare_embeddings.py data/metamodel-training-with-scores.jsonl model/model-large/metamodel model/model-large/embeddings.npy
    deps:
      - src/prepare_embeddings.py
      - data/metamodel-training-with-scores.jsonl
      - model/model-large/metamodel
    outs:
      - model/model-large/embeddings.npy

  random-baseline:
    cmd: python src/random_baseline.py data/metamodel-training-with-scores.jsonl model/model-large/embeddings.npy
    deps:
      - src/random_baseline.py
      - data/metamodel-training-with-scores.jsonl
      - model/model-large/embeddings.npy
    metrics:
      - baseline-metrics.json:
          cache: false

  train-metamodel:
    cmd: python src/train_metamodel.py data/metamodel-training-with-scores.jsonl model/model-large/embeddings.npy model/metamodel-master/model.h5
    deps:
      - src/train_metamodel.py
      - data/metamodel-training-with-scores.jsonl
      - model/model-large/embeddings.npy
    params:
      - train-metamodel.seed
      - train-metamodel.validation_split
      - train-metamodel.hidden_layer_size
      - train-metamodel.patience
    metrics:
      - advanced-metrics.json:
          cache: false
    outs:
      - model/metamodel-master/model.h5
